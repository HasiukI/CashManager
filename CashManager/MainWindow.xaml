<Window x:Name="window" x:Class="CashManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CashManager.ViewModel"
        xmlns:lvc="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF" xmlns:lvc1="clr-namespace:LiveChartsCore.SkiaSharpView;assembly=LiveChartsCore.SkiaSharpView"
        mc:Ignorable="d"
        Title="CashManager" Height="580" Width="750" Background="White"
       Icon="pack://application:,,,/Images/StaticImages/Logo.png"
>


    <Window.DataContext>
        <local:MainViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <DataTemplate x:Key="NoneZeroTemplate">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16"  Grid.Column="0" Grid.Row="0" Grid.RowSpan="2"  Foreground="{Binding Path=DataContext.Property.CurentColor.ColorForFontsOnWhite, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Text="{Binding Path=DataContext.Cash.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />

                <Border Grid.Column="1" Grid.Row="0" HorizontalAlignment="Center" Padding="5" Background="{Binding Path=DataContext.Property.CurentColor.HardColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding Path=DataContext.Cash.UpCountCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Image Source="pack://application:,,,/Images/StaticImages/arrow-up.png" Width="20"/>
                </Border>
                <Border Grid.Column="1" Grid.Row="1" HorizontalAlignment="Center" Padding="5"  Background="{Binding Path=DataContext.Property.CurentColor.HardColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding Path=DataContext.Cash.DownCountCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Image Source="pack://application:,,,/Images/StaticImages/arrow-down.png" Width="20"/>
                </Border>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="ZeroTemplate">
            <StackPanel >
                <TextBox FontSize="18" Margin="10" Text="{Binding Path=DataContext.Cash.TotalPrice, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=DataContext.Cash.TotalPrice, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="0">
                                    <Setter Property="Foreground" Value="White"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </StackPanel>
        </DataTemplate>

        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />

        <Style TargetType="ContentControl" x:Key="PriceStyle">
            <Setter Property="ContentTemplate" Value="{StaticResource NoneZeroTemplate}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Data.CurentCategory.Price}">
                    <DataTrigger.Value>
                        <sys:Decimal>0</sys:Decimal>
                    </DataTrigger.Value>
                    <Setter Property="ContentTemplate" Value="{StaticResource ZeroTemplate}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="HoverProfit" TargetType="Border">
            <Setter Property="Background" Value="#03b648"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#0cd459"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="HoverOhter" TargetType="Border">
            <Setter Property="Background" Value="White"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#32425a"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="HoverCosts" TargetType="Border">
            <Setter Property="Background" Value="#e62828"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#f73c3c"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="HoverBorder" TargetType="Border">
            <Setter Property="Background" Value="{Binding Path=DataContext.Property.CurentColor.HardColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{Binding Path=DataContext.Property.CurentColor.HardColorEnter, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Category-->
        <Storyboard x:Key="ShowCreateCategory">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="borderCreateCategory" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:00.6000000" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="borderCreateCategory" Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static HorizontalAlignment.Left}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="borderCreateCategory" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.6000000" Value="600"/>
            </DoubleAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="grid3" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False"/>
            </BooleanAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="gridCreateCategoryCont" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="gridInfoCreateCategory" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.6000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloseCreateCategory">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="borderCreateCategory" Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static HorizontalAlignment.Right}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="borderCreateCategory" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="borderCreateCategory" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="600"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="grid3" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True"/>
            </BooleanAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="gridCreateCategoryCont" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="gridInfoCreateCategory" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="EnterChangeCategory">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="image3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="360"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="textBlock3" Storyboard.TargetProperty="(TextBlock.FontSize)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="18"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="12"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="textBlock4" Storyboard.TargetProperty="(TextBlock.FontSize)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="12"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="18"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="textBlock4" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="LeaveChangeCategory">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="textBlock3" Storyboard.TargetProperty="(TextBlock.FontSize)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="12"/>
                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="18"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="textBlock4" Storyboard.TargetProperty="(TextBlock.FontSize)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="18"/>
                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="12"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="textBlock4" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="TapNewCategoryProfitTrue">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="30"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="120"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="TapNewCategoryProfitFasle">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="120"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="30"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="TapNewCategoryCostsTrue">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border2" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="30"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="120"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="TapNewCategoryCostsFalse">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border2" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="120"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="30"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HideProfitCategories">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="image2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="180"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="listBox" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="listBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:00.5000000" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grid2" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="150"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.5000000" Value="40"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="textBlock2" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border6" Storyboard.TargetProperty="(Border.CornerRadius)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                    <DiscreteObjectKeyFrame.Value>
                        <CornerRadius>0,0,10,0</CornerRadius>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
                <DiscreteObjectKeyFrame KeyTime="00:00:00.5000000">
                    <DiscreteObjectKeyFrame.Value>
                        <CornerRadius>0,10,10,0</CornerRadius>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ShowProfitCategories">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="image2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="180"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="listBox" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="listBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:00.5000000">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grid2" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="40"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="150"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="textBlock2" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border6" Storyboard.TargetProperty="(Border.CornerRadius)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                    <DiscreteObjectKeyFrame.Value>
                        <CornerRadius>0,10,10,0</CornerRadius>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
                <DiscreteObjectKeyFrame KeyTime="00:00:00.5000000">
                    <DiscreteObjectKeyFrame.Value>
                        <CornerRadius>0,0,10,0</CornerRadius>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HideCostsCategories">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ImageArrowcosts" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="180"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="lb_costs" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="lb_costs" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:00.5000000" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="gridcosts" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="150"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.5000000" Value="40"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="costs_tb" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border8" Storyboard.TargetProperty="(Border.CornerRadius)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                    <DiscreteObjectKeyFrame.Value>
                        <CornerRadius>0,0,0,10</CornerRadius>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
                <DiscreteObjectKeyFrame KeyTime="00:00:00.5000000">
                    <DiscreteObjectKeyFrame.Value>
                        <CornerRadius>10,0,0,10</CornerRadius>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ShowCostsCategories">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ImageArrowcosts" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="180"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="lb_costs" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="lb_costs" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:00.5000000">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="gridcosts" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="40"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="150"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="costs_tb" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border8" Storyboard.TargetProperty="(Border.CornerRadius)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                    <DiscreteObjectKeyFrame.Value>
                        <CornerRadius>10,0,0,10</CornerRadius>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
                <DiscreteObjectKeyFrame KeyTime="00:00:00.5000000">
                    <DiscreteObjectKeyFrame.Value>
                        <CornerRadius>0,0,0,10</CornerRadius>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <!--Cash-->
        <Storyboard x:Key="ShowCreateCash">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="gridCreateCashCont" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="borderCreateCash" Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static HorizontalAlignment.Left}"/>
            </ObjectAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="grid3" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False"/>
            </BooleanAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="borderCreateCash" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="400"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grid4" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.6000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloseCreateCash">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="gridCreateCashCont" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.6000000" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="borderCreateCash" Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static HorizontalAlignment.Right}"/>
            </ObjectAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="grid3" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True"/>
            </BooleanAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="borderCreateCash" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="400"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.6000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grid4" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>

        </Storyboard>

        <!--Calendar-->
        <Storyboard x:Key="ShowCalendar">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Calendarborder" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="-61"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Calendar" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Calendar" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="-500"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="-0.0002499999686733645"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Calendar" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloseCalendar">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Calendarborder" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-61"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Calendar" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Calendar" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="-500"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Calendar" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        
        <!--History-->
        <Storyboard x:Key="ShowHistory">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Historyboard" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="-100"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grid1" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border1" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border1" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="300"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloseHistory">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Historyboard" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-100"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grid1" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border1" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border1" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="300"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            
        </Storyboard>
        <Storyboard x:Key="SetDefaultOther">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Historyboard" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border1" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border1" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Calendarborder" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Calendar" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Calendar" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-500"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Calendar" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        
        <!--Property-->
        <Storyboard x:Key="ShowProperty">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="gridproperty" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="gridproperty" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloseProperty">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="gridproperty" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="gridproperty" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        
       


    </Window.Resources>


    <Grid Background="{Binding Property.CurentColor.MainColor}">

        <!--Main Container-->
        <Grid  x:Name="grid3" Panel.ZIndex="2" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition/>
            </Grid.RowDefinitions>


            <!--Buttoms-->
            <Grid Grid.Column="0" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>


                <StackPanel>
                    <!--Create Category-->
                    <Border x:Name="CreateCategoryborder" Grid.Row="0" HorizontalAlignment="Left"  CornerRadius="14" Margin="5" Padding="5" Style="{StaticResource HoverBorder}"  ToolTip="{Binding Language.ToolTipCreateCategory}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding Category.SetDefaultPropertyCommand}"/>
                                <i:InvokeCommandAction Command="{Binding Property.ShowCategoryCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <Border.Triggers>
                            <EventTrigger RoutedEvent="Border.MouseLeftButtonUp">
                                <BeginStoryboard Storyboard="{StaticResource ShowCreateCategory}" />
                            </EventTrigger>
                        </Border.Triggers>
                        <Image  Width="30" Source="pack://application:,,,/Images/StaticImages/categoryCreate.png"/>
                    </Border>

                    <!--Show Calendar-->
                    <Border Grid.Column="1" HorizontalAlignment="Right"  x:Name="Calendarborder"  CornerRadius="14" Margin="5" Padding="5"  Style="{StaticResource HoverBorder}"  ToolTip="{Binding Language.ToolTipCalendar}" RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform X="0"/>
                            </TransformGroup>
                        </Border.RenderTransform>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding Property.ShowPropertyOther}"/>
                                <ei:ControlStoryboardAction Storyboard="{StaticResource ShowCalendar}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <Image x:Name="image" Width="30" Source="pack://application:,,,/Images/StaticImages/calendar.png" />
                    </Border>

                    <!--Show History-->
                    <Border x:Name="Historyboard"  Grid.Column="1" HorizontalAlignment="Right"  CornerRadius="14" Margin="5" Padding="5" Style="{StaticResource HoverBorder}"  ToolTip="{Binding Language.ToolTipCreateHistory}">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform X="0"/>
                            </TransformGroup>
                        </Border.RenderTransform>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding Property.ShowPropertyOther}"/>
                                <ei:ControlStoryboardAction Storyboard="{StaticResource ShowHistory}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Image x:Name="image1" Width="30" Source="pack://application:,,,/Images/StaticImages/file.png"/>
                    </Border>
                </StackPanel>

                <!--Options-->
                <Border Margin="10 5" Padding="5" CornerRadius="20" Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Left" Style="{StaticResource HoverBorder}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding Property.ShowPropertyCommand}"/>
                            <ei:ControlStoryboardAction  Storyboard="{StaticResource ShowProperty}"/>
                            <ei:ControlStoryboardAction  Storyboard="{StaticResource SetDefaultOther}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Image Width="20" Height="20" Source="pack://application:,,,/Images/StaticImages/setting.png"/>
                </Border>
            </Grid>


            <!--MainInfo-->
            <Grid Grid.Column="1" Grid.Row="0" Margin="0,2,0,0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <!--CurentDay-->
                <StackPanel Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Bottom" Orientation="Horizontal">
                    <TextBlock  Foreground="{Binding Property.CurentColor.ColorForFontsOnWhite}"  FontSize="18" FontWeight="Bold" Text="{Binding Data.SelectedDate.Day}" Margin="0,0,3,0"/>
                    <TextBlock  Foreground="{Binding Property.CurentColor.ColorForFontsOnWhite}"  FontSize="18" FontWeight="Bold" Text="{Binding History.NameMounthForMain}" Margin="0,0,3,0"/>
                    <TextBlock Foreground="{Binding Property.CurentColor.ColorForFontsOnWhite}" FontSize="18"  FontWeight="Bold" Text=","/>
                    <TextBlock Foreground="{Binding Property.CurentColor.ColorForFontsOnWhite}" FontSize="15" Text="{Binding Data.MainDayOfWeek}" VerticalAlignment="Bottom" Margin="3 0"/>
                </StackPanel>
                <!--CurentSum-->
                <StackPanel Grid.Column="1" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Bottom" Orientation="Horizontal">
                    <TextBlock FontSize="15" Foreground="{Binding Property.CurentColor.ColorForFontsOnWhite}" Text="{Binding Language.MainTotal}" Margin="3 0" VerticalAlignment="Bottom"/>
                    <TextBlock FontSize="18" Foreground="{Binding Property.CurentColor.ColorForFontsOnWhite}" FontWeight="Bold" Text="{Binding Data.MainInfo.TotalSum, StringFormat={}{0:F2}}"/>
                </StackPanel>
            </Grid>


            <!--MainContainer-->
            <Border Grid.Row="1" Grid.Column="1" CornerRadius="40 0 0 0" >
                <Border.Background>
                    <VisualBrush>
                        <VisualBrush.Visual>
                            <Grid>
                                <Rectangle Fill="{Binding Property.CurentColor.LightColor}" Width="30" Height="30"/>
                                <Image Source="{Binding Property.CurentBackGroundPicture}" Stretch="Uniform">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Property.CurentBackGroundPicture}" Value="{x:Null}">
                                                    <Setter Property="Opacity" Value="0"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Grid>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Border.Background>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>



                    <Grid x:Name="grid2" Width="150">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>


                            <Border x:Name="border6" Grid.Row="1"  Style="{StaticResource HoverProfit}" CornerRadius="0 0 10 0" HorizontalAlignment="Stretch" >
                                <i:Interaction.Triggers>
                                    <ei:DataTrigger Binding="{Binding Property.IsHideCategoriesProfit}" Value="True">
                                        <ei:ControlStoryboardAction Storyboard="{StaticResource HideProfitCategories}"/>
                                    </ei:DataTrigger>
                                    <ei:DataTrigger Binding="{Binding Property.IsHideCategoriesProfit}" Value="False">
                                        <ei:ControlStoryboardAction Storyboard="{StaticResource ShowProfitCategories}"/>
                                    </ei:DataTrigger>
                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                        <i:InvokeCommandAction Command="{Binding Property.HideOrShowProfitCategorriesCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock x:Name="textBlock2" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="15" FontWeight="Medium" Foreground="White" Text="{Binding Language.CategoryProfit}"/>
                                    <Border x:Name="border3" Grid.Column="1" Padding="3" Width="30" HorizontalAlignment="Right" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                        
                                        <Border.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Border.RenderTransform>
                                        <Image x:Name="image2" Source="pack://application:,,,/Images/StaticImages/arrow-side.png" RenderTransformOrigin="0.5,0.5">
                                            <Image.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform Angle="180"/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Image.RenderTransform>
                                        </Image>
                                    </Border>
                                </Grid>

                            </Border>

                            <ScrollViewer FlowDirection="RightToLeft" CanContentScroll="False" VerticalScrollBarVisibility="Auto">
                                <ListBox x:Name="listBox" Grid.Row="0" ItemsSource="{Binding Data.CategoriesProfit}" SelectedItem="{Binding Data.CurentCategory}" FlowDirection="LeftToRight"  Background="Transparent" BorderThickness="0" VerticalAlignment="Bottom" >
                                    <ListBox.Template>
                                        <ControlTemplate TargetType="ListBox">

                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollViewer Grid.Column="0" Padding="0" Focusable="false" FlowDirection="LeftToRight">
                                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </ScrollViewer>
                                            </Grid>
                                        </ControlTemplate>
                                    </ListBox.Template>

                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem">
                                            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListBoxItem_PreviewMouseLeftButtonDown"/>
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ListBoxItem">
                                                        <Border x:Name="Border" BorderThickness="0" Background="{TemplateBinding Background}">

                                                            <ContentPresenter />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListBox.ItemContainerStyle>

                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel/>
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>

                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Border Background="{Binding DataContext.Property.CurentColor.MainColor, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" CornerRadius="0 20 20 0" Margin="0,3,0,3">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                                        <ei:ControlStoryboardAction Storyboard="{StaticResource ShowCreateCash}"/>
                                                        <i:InvokeCommandAction Command="{Binding DataContext.Cash.SetDefaultPropertyCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                                        <i:InvokeCommandAction Command="{Binding DataContext.Property.ShowCashCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="MouseRightButtonUp">
                                                        <i:InvokeCommandAction Command="{Binding DataContext.Category.ShowPopupCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Style.Triggers>
                                                            <EventTrigger RoutedEvent="MouseEnter">
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <ThicknessAnimation Storyboard.TargetProperty="Padding" To="0,5" Duration="0:0:0.2"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger>
                                                            <EventTrigger RoutedEvent="MouseLeave">
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <ThicknessAnimation Storyboard.TargetProperty="Padding" To="0,0" Duration="0:0:0.2"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                                <Grid >
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition Width="auto"/>
                                                    </Grid.ColumnDefinitions>


                                                    <TextBlock Grid.Column="0" Text="{Binding Name}" HorizontalAlignment="Center" Margin="2 0" VerticalAlignment="Center" Foreground="{Binding DataContext.Property.CurentColor.ColorForFontsOnWhite, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"/>
                                                    <Border Grid.Column="1" Height="45" Width="45" Margin="3" Background="{Binding Color}" HorizontalAlignment="Right" CornerRadius="50" Padding="5">
                                                        <Image Source="{Binding Image}"/>
                                                    </Border>
                                                </Grid>
                                            </Border>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </ScrollViewer>
                            
                        </Grid>
                    </Grid>

                    <!--Diagram-->

                    <Grid x:Name="diagramStovb" Grid.Column="1"  >

                        <lvc:CartesianChart Series="{Binding Data.Series}"  Margin="20">
                      
                        </lvc:CartesianChart>
                    </Grid>

                    <Grid x:Name="diagramCircle" Grid.Column="1" Visibility="Hidden" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <TextBlock HorizontalAlignment="Center" Grid.Row="0" Grid.Column="0" FontSize="20" FontWeight="Medium" Foreground="{Binding Property.CurentColor.ColorForFontsOnWhite}" Text="{Binding Language.CategoryProfit}"/>
                        <TextBlock HorizontalAlignment="Center" Grid.Row="0" Grid.Column="1" FontSize="20" FontWeight="Medium" Foreground="{Binding Property.CurentColor.ColorForFontsOnWhite}" Text="{Binding Language.CategoryCosts}"/>

                        <lvc:PieChart Grid.Row="1" Grid.Column="0" Series="{Binding Data.SeriesProfitCircle}" Margin="20"/>
                        <lvc:PieChart Grid.Row="1" Grid.Column="1" Series="{Binding Data.SeriesCostsCircle}" Margin="20"/>
                    </Grid>

                    <Grid Grid.Column="2" Width="150" x:Name="gridcosts" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Grid  Grid.Row="1" HorizontalAlignment="Right">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="30"/>
                            </Grid.RowDefinitions>

                            <Border x:Name="border8" Grid.Row="1"  Style="{StaticResource HoverCosts}" CornerRadius="0 0 0 10">
                                <i:Interaction.Triggers>
                                    <ei:DataTrigger Binding="{Binding Property.IsHideCategoriesCosts}" Value="True">
                                        <ei:ControlStoryboardAction Storyboard="{StaticResource HideCostsCategories}"/>
                                    </ei:DataTrigger>
                                    <ei:DataTrigger Binding="{Binding Property.IsHideCategoriesCosts}" Value="False">
                                        <ei:ControlStoryboardAction Storyboard="{StaticResource ShowCostsCategories}"/>
                                    </ei:DataTrigger>
                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                        <i:InvokeCommandAction Command="{Binding Property.HideOrShowCostsCategorriesCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <Border x:Name="border7"  Grid.Column="0" Padding="3" Width="30" HorizontalAlignment="Left" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                       
                                        <Border.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Border.RenderTransform>
                                        <Image x:Name="ImageArrowcosts" Source="pack://application:,,,/Images/StaticImages/arrow-side.png" RenderTransformOrigin="0.5,0.5">
                                            <Image.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform Angle="0"/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Image.RenderTransform>
                                        </Image>
                                    </Border>
                                    <TextBlock Grid.Column="1" x:Name="costs_tb" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="15" FontWeight="Medium" Foreground="White" Text="{Binding Language.CategoryCosts}"/>
                                </Grid>

                            </Border>


                            <ListBox x:Name="lb_costs" Grid.Row="0"  Width="150"  ItemsSource="{Binding Data.CategoriesCosts}" SelectedItem="{Binding Data.CurentCategory}"  Background="Transparent" BorderThickness="0" VerticalAlignment="Bottom">
                                <ListBox.Template>
                                    <ControlTemplate TargetType="ListBox">

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollViewer Grid.Column="0" Padding="0" Focusable="false" >
                                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </ScrollViewer>
                                        </Grid>
                                    </ControlTemplate>
                                </ListBox.Template>

                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListBoxItem_PreviewMouseLeftButtonDown"/>
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListBoxItem">
                                                    <Border x:Name="Border" BorderThickness="0" Background="{TemplateBinding Background}">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                                                <ei:ControlStoryboardAction Storyboard="{StaticResource ShowCreateCash}"/>
                                                                <i:InvokeCommandAction Command="{Binding DataContext.Cash.SetDefaultPropertyCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                                                <i:InvokeCommandAction Command="{Binding DataContext.Property.ShowCashCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                                            </i:EventTrigger>
                                                            <i:EventTrigger EventName="MouseRightButtonUp">
                                                                <i:InvokeCommandAction Command="{Binding DataContext.Category.ShowPopupCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                        <ContentPresenter />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListBox.ItemContainerStyle>

                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel/>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>

                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Border Background="{Binding DataContext.Property.CurentColor.MainColor, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" CornerRadius="20 0 0 20" Margin="0,3,0,3" >
                                            
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <EventTrigger RoutedEvent="MouseEnter">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ThicknessAnimation Storyboard.TargetProperty="Padding" To="0,5" Duration="0:0:0.2"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                        <EventTrigger RoutedEvent="MouseLeave">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ThicknessAnimation Storyboard.TargetProperty="Padding" To="0,0" Duration="0:0:0.2"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Border Grid.Column="0" Height="45" Width="45" Margin="3" HorizontalAlignment="Right" Background="{Binding Color}" CornerRadius="50" Padding="5" >
                                                    <Image Source="{Binding Image}" />
                                                </Border>
                                                <TextBlock Grid.Column="1" Margin="2 0"  Text="{Binding Name}" Foreground="{Binding DataContext.Property.CurentColor.ColorForFontsOnWhite, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                                            </Grid>
                                        </Border>

                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                    </Grid>

                </Grid>
            </Border>
        </Grid>

        <!--Calendar and History-->
        <Grid HorizontalAlignment="Right" VerticalAlignment="Top" Background="Transparent" Panel.ZIndex="{Binding Property.ZIndexOther}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <!--Calendar-->
            <Border x:Name="Calendar" Background="{Binding Property.CurentColor.HardColor}" CornerRadius="10" VerticalAlignment="Top"  RenderTransformOrigin="0.5,0.5" MinWidth="312" Visibility="Collapsed" Margin="0,10,10,0">
                <Border.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform Y="-500"/>
                    </TransformGroup>
                </Border.RenderTransform>
                <Border.Effect>
                    <DropShadowEffect Opacity="0.3" BlurRadius="10"/>
                </Border.Effect>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <!--Calendar Info-->
                    <Grid x:Name="grid" Grid.Column="0" Grid.Row="0" >
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Border x:Name="border4"  Padding="5" Margin="5" Width="30" CornerRadius="10" Style="{StaticResource HoverBorder}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                        <i:InvokeCommandAction Command="{Binding History.PrevMounthCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Image  Source="pack://application:,,,/Images/StaticImages/arrow-left.png" />
                            </Border>
                            <TextBlock  Foreground="{Binding Property.CurentColor.ColorForFontsOnBlack}" Text="{Binding History.NameMounthForCalendaer}" VerticalAlignment="Center" FontSize="18" Margin="15 0"/>
                            <Border x:Name="border5" Padding="5" Margin="5" Width="30" CornerRadius="10" Style="{StaticResource HoverBorder}" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                        <i:InvokeCommandAction Command="{Binding History.NextMounthCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Image  Source="pack://application:,,,/Images/StaticImages/right-arrow.png"/>
                            </Border>
                        </StackPanel>
                    </Grid>

                    <!--Exit Calendar-->
                    <Border Grid.Column="1" Grid.Row="0" HorizontalAlignment="Right"  Padding="10" Margin="5" Width="30" CornerRadius="10" Style="{StaticResource HoverBorder}" >
                        <Border.Triggers>
                            <EventTrigger RoutedEvent="Border.MouseLeftButtonUp">
                                <BeginStoryboard Storyboard="{StaticResource CloseCalendar}" />
                            </EventTrigger>
                        </Border.Triggers>
                        <Image   Source="pack://application:,,,/Images/StaticImages/close.png"  />
                    </Border>


                    <Grid  MinWidth="312" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Top"  HorizontalAlignment="Stretch" Panel.ZIndex="2" Background="White">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition/>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>


                        <TextBlock x:Name="TB_MondayCalendar"  Foreground="Black"   Grid.Row="1" Grid.Column="0" Text="{Binding Language.CalendarMon}" VerticalAlignment="Bottom"/>
                        <TextBlock x:Name="TB_TuesdayCalendar" Foreground="Black"   Grid.Row="1" Grid.Column="1" Text="{Binding Language.CalendarTue}" VerticalAlignment="Bottom"/>
                        <TextBlock x:Name="TB_WednesdayCalendar" Foreground="Black"  Grid.Row="1" Grid.Column="2" Text="{Binding Language.CalendarWed}" VerticalAlignment="Bottom"/>
                        <TextBlock x:Name="TB_ThursdayCalendar" Foreground="Black"   Grid.Row="1" Grid.Column="3" Text="{Binding Language.CalendarThu}" VerticalAlignment="Bottom"/>
                        <TextBlock x:Name="TB_FridayCalendar" Foreground="Black"   Grid.Row="1" Grid.Column="4" Text="{Binding Language.CalendarFri}" VerticalAlignment="Bottom"/>
                        <TextBlock x:Name="TB_SaturdayCalendar" Foreground="Black"   Grid.Row="1" Grid.Column="5" Text="{Binding Language.CalendarSat}" VerticalAlignment="Bottom"/>
                        <TextBlock x:Name="TB_SundayCalendar" Foreground="Black"   Grid.Row="1" Grid.Column="6" Text="{Binding Language.CalendarSun}" VerticalAlignment="Bottom"/>

                        <ListBox  Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="7" Grid.RowSpan="5" ItemsSource="{Binding Data.DaysHistory}" SelectedItem="{Binding Data.SelectedDayHistory}" BorderThickness="0">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListBoxItem">
                                                <Border x:Name="Border" BorderThickness="0" Background="{TemplateBinding Background}" >
                                                    <ContentPresenter />
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="Border" Property="Background" Value="#eaeef4" />
                                                    </Trigger>
                                                    <DataTrigger Binding="{Binding Date}" Value="{x:Static sys:DateTime.Today}">
                                                        <Setter TargetName="Border" Property="BorderBrush" Value="#a9bad0" />
                                                        <Setter TargetName="Border" Property="BorderThickness" Value="2" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter TargetName="Border" Property="Background" Value="#d1dae6" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="7" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>

                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <TextBlock Foreground="Black"  VerticalAlignment="Top"  Text="{Binding Date.Day}"/>
                                        <TextBlock Foreground="#68C37F" Text="{Binding TotalProfit}">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding TotalProfit}" Value="0">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        <TextBlock  Foreground="#D24040" Text="{Binding TotalCosts}" >
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding TotalCosts}" Value="0">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>
                </Grid>
            </Border>


            <!--History-->
            <Border x:Name="border1" Width="0" Grid.Column="1"  HorizontalAlignment="Right" VerticalAlignment="Top"  Background="{Binding Property.CurentColor.HardColor}" CornerRadius="10 10 0 0" Visibility="Collapsed"  Margin="0,10,10,0">
                <Grid x:Name="gridHistory"  >
                    <Grid.Effect>
                        <DropShadowEffect BlurRadius="10" Opacity="0.3"/>
                    </Grid.Effect>

                    <Grid.RowDefinitions>
                        <RowDefinition  Height="40"/>
                        <RowDefinition />
                    </Grid.RowDefinitions>


                    <Grid x:Name="grid1" Opacity="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition  Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <Grid Grid.Column="0" >
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <StackPanel VerticalAlignment="Center" Margin="5 0" Grid.Row="0" Orientation="Horizontal" >
                                <TextBlock Foreground="{Binding Property.CurentColor.ColorForFontsOnBlack}" Text="{Binding Language.HistoryTotalProfit}" Margin="5 0"/>
                                <TextBlock x:Name="textBlock" Text="{Binding Data.SelectedDayHistory.TotalProfit}" Foreground="White" />
                            </StackPanel>
                            <StackPanel VerticalAlignment="Center" Margin="5 0" Grid.Row="1" Orientation="Horizontal">
                                <TextBlock  Foreground="{Binding Property.CurentColor.ColorForFontsOnBlack}" Text="{Binding Language.HistoryTotalCosts}"  Margin="5 0"/>
                                <TextBlock x:Name="textBlock1" Text="{Binding Data.SelectedDayHistory.TotalCosts}" Foreground="White" />
                            </StackPanel>
                        </Grid>

                        <Border  Grid.Column="1" HorizontalAlignment="Right"  Margin="5" Padding="10"  Width="30" CornerRadius="10" Style="{StaticResource HoverBorder}" >
                            <Border.Triggers>
                                <EventTrigger RoutedEvent="Border.MouseLeftButtonUp">
                                    <BeginStoryboard Storyboard="{StaticResource CloseHistory}" />
                                </EventTrigger>
                            </Border.Triggers>
                            <Image  Source="pack://application:,,,/Images/StaticImages/close.png"  />
                        </Border>
                    </Grid>
                    
                    <ListBox Grid.Row="1" ItemsSource="{Binding Data.SelectedDayHistory.HistoriesInDay}" SelectedItem="{Binding Cash.SelectedHistory}" BorderThickness="0" MaxHeight="500">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListBoxItem">
                                            <Border x:Name="Border" BorderThickness="0" Background="{TemplateBinding Background}" >
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseRightButtonUp">
                                                        <i:InvokeCommandAction Command="{Binding DataContext.Cash.ShowPopupCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <ContentPresenter />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="Border" Property="Background" Value="#eaeef4" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="5 0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>

                                    <Grid Grid.Row="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <!--Image-->
                                        <Border Grid.Column="0" Width="40" Background="{Binding Category.Color}" CornerRadius="20" Padding="5">
                                            <Image  Source="{Binding Category.Image}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        </Border>
                                        
                                        <!--Info-->
                                        <Grid Grid.Column="1">
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>

                                            <Grid Grid.Row="0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>

                                                <TextBlock  Grid.Column="0"  FontSize="16" FontWeight="Bold" Margin="3 0 0 0" >
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Category.isCosts}" Value="True">
                                                                    <Setter Property="Foreground" Value="#D24040"/>
                                                                    <Setter Property="Text" Value="-"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Category.isCosts}" Value="False">
                                                                    <Setter Property="Foreground" Value="#68C37F"/>
                                                                    <Setter Property="Text" Value="+"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>


                                                <TextBlock Grid.Column="1"  Text="{Binding Cash.Price}" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" >
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Category.isCosts}" Value="True">
                                                                    <Setter Property="Foreground" Value="#D24040"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Category.isCosts}" Value="False">
                                                                    <Setter Property="Foreground" Value="#68C37F"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                           
                                            <TextBlock  Grid.Row="2" Text="{Binding Cash.CreatedAt, StringFormat='HH:mm'}" HorizontalAlignment="Right" FontSize="10" Margin="3 0 0 0"  Foreground="Black"/>
                                        </Grid>

                                    </Grid>

                                    <TextBlock  Grid.Row="1" Text="{Binding Cash.Description}" TextWrapping="Wrap" FontSize="12"   Foreground="Black">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Cash.Description}" Value="none">
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>

                                    <Line Grid.Row="2" X1="0"  X2="1" Stretch="Fill" Stroke="{Binding Path=DataContext.Property.CurentColor.HardColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Margin="0 10" StrokeThickness="2" />
                            
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </Border>

        </Grid>

        <!--Property-->
        <Grid  x:Name="gridproperty"  Background="{Binding Property.CurentColor.MainColor}" HorizontalAlignment="Stretch" Opacity="0" Visibility="Collapsed" Panel.ZIndex="{Binding Property.ZIndexProperty}">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <!--InfoMe-->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                
                <Border Background="{Binding Property.CurentColor.HardColor}" Margin="10" CornerRadius="100" HorizontalAlignment="Center" >
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Border BorderThickness="10" BorderBrush="{Binding Property.CurentColor.MainColor}" CornerRadius="100" Padding="5">
                            <Image Source="pack://application:,,,/Images/StaticImages/MyLogo.png" Width="80" Height="80" Margin="10"/>
                        </Border>


                        <StackPanel Grid.Column="1" Margin="10 30">

                            <TextBlock Grid.Row="0" Margin="5" Foreground="{Binding Property.CurentColor.ColorForFontsOnBlack}" TextWrapping="Wrap" >
                                <TextBlock.Inlines>
                                    <Run Text="{Binding Language.PropertyOpus1, Mode=OneWay}"/>
                                    <Run Text="{Binding Language.PropertyOpusHyper1,  Mode=OneWay}" Cursor="Hand" FontStyle="Italic" FontWeight="Medium">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                                <i:InvokeCommandAction Command="{Binding Property.SendMessageMeCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Run>
                                </TextBlock.Inlines>
                            </TextBlock>
                            <TextBlock  Foreground="{Binding Property.CurentColor.ColorForFontsOnBlack}"  TextWrapping="Wrap" >
                                <TextBlock.Inlines>
                                    <Run Text="{Binding Language.PropertyOpus2, Mode=OneWay}"/>
                                    <Run Text="{Binding Language.PropertyOpusHyper2,  Mode=OneWay}" Cursor="Hand" FontStyle="Italic" FontWeight="Medium">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                                <i:InvokeCommandAction Command="{Binding Property.SendMessageDanaCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Run>
                                </TextBlock.Inlines>
                            </TextBlock >
                        </StackPanel>
                    </Grid>
                </Border>

                <Border Grid.Column="1" Padding="5" CornerRadius="10" Width="30" Height="30" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="5" Style="{StaticResource HoverBorder}">
                    <Border.Triggers>
                        <EventTrigger RoutedEvent="Border.MouseLeftButtonUp">
                            <BeginStoryboard Storyboard="{StaticResource CloseProperty}" />
                        </EventTrigger>
                    </Border.Triggers>
                    <Image Source="pack://application:,,,/Images/StaticImages/close.png" Margin="5"/>
                </Border>
            </Grid>
           
           

            <!--Properrty-->
            <Grid Grid.Row="1" Panel.ZIndex="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <!--Other-->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <!--Language-->
                    <Grid  Grid.Row="0" Margin="5 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" VerticalAlignment="Center" FontSize="16" Foreground="{Binding Property.CurentColor.ColorForFontsOnWhite}" Text="{Binding Language.PropertyLanguage}"/>
                        <StackPanel Margin="5 0" Grid.Column="1"  Orientation="Horizontal">
                            <Border Width="40" Height="40" Padding="3" CornerRadius="5" Style="{StaticResource HoverBorder}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                        <i:InvokeCommandAction Command="{Binding ChangeLanguageToENG}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Image Source="pack://application:,,,/Images/StaticImages/united-kingdom.png" Stretch="Fill"/>
                            </Border>
                            <Border Margin="5 0" Width="40" Height="40" Padding="3" CornerRadius="5" Style="{StaticResource HoverBorder}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                        <i:InvokeCommandAction Command="{Binding  ChangeLanguageToUKR}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Image Source="pack://application:,,,/Images/StaticImages/ukraine.png" Stretch="Fill"/>
                            </Border>
                        </StackPanel>
                    </Grid>

                    <Line Grid.Row="1" X1="0"  X2="1" Stretch="Fill" Stroke="{Binding Property.CurentColor.HardColor}" Margin="0 10" StrokeThickness="1" />
                    <!--Colors-->
                    <Grid Grid.Row="2"  Margin="5 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" VerticalAlignment="Center" FontSize="16" Foreground="{Binding Property.CurentColor.ColorForFontsOnWhite}" Text="{Binding Language.PropertyThame}"/>
                        <ListBox Grid.Column="1"  ItemsSource="{Binding Property.BackgroundColor}" SelectedItem="{Binding Property.CurentColor}" Background="Transparent" BorderThickness="0">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListBoxItem">
                                                <Border x:Name="Border" BorderThickness="0" Background="{TemplateBinding Background}">
                                                    <ContentPresenter />
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter TargetName="Border" Property="BorderThickness" Value="3" />
                                                        <Setter TargetName="Border" Property="BorderBrush" Value="{Binding DataContext.Property.CurentColor.HardColor, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" />
                                                        <Setter TargetName="Border" Property="CornerRadius" Value="30" />
                                                        <Setter TargetName="Border" Property="Padding" Value="0" />
                                                        <Setter TargetName="Border" Property="Width" Value="50" />
                                                        <Setter TargetName="Border" Property="Height" Value="50" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>

                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>

                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Border Padding="3" Width="30" Height="30" CornerRadius="15" BorderThickness="1" BorderBrush="{Binding HardColor}" Margin="5,0">
                                        <Ellipse Fill="{Binding MainColor}"  />
                                    </Border>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>

                    <Line Grid.Row="3" X1="0"  X2="1" Stretch="Fill" Stroke="{Binding Property.CurentColor.HardColor}" Margin="10 0" StrokeThickness="1" />
                    <!--typeDiagram-->
                    <Grid  Grid.Row="4"  Margin="5 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" VerticalAlignment="Center" FontSize="16" Foreground="{Binding Property.CurentColor.ColorForFontsOnWhite}" Text="{Binding Language.PropertyDiagram}"/>

                        <StackPanel Orientation="Horizontal" Grid.Column="1">
                            <Border x:Name="Stovb_Bord" Width="40" Height="40" Padding="3" Margin="5 0" CornerRadius="10" Style="{StaticResource HoverBorder}" MouseLeftButtonUp="ChangeGraph">
                                <Image Source="pack://application:,,,/Images/StaticImages/bar-chart.png"/>
                            </Border>
                            <Border x:Name="Circle_Bord" Width="40" Height="40" Padding="3" CornerRadius="10" Style="{StaticResource HoverBorder}" MouseLeftButtonUp="ChangeGraph">
                                <Image Source="pack://application:,,,/Images/StaticImages/graph.png"/>
                            </Border>
                        </StackPanel>
                    </Grid>
                </Grid>

                <Line Grid.Column="1" Y1="0"  Y2="1" Stretch="Fill" Stroke="{Binding Property.CurentColor.HardColor}" Margin="0 10" StrokeThickness="1" />
                <!--ImagesBackGround-->
                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition />
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0"  FontSize="16" Margin="5 0" VerticalAlignment="Center" Foreground="{Binding Property.CurentColor.ColorForFontsOnWhite}" Text="{Binding Language.PropertyImage}"/>

                    <ListBox  Grid.Row="1"  Margin="0 0 0 10" Padding="5" ItemsSource="{Binding Property.BackGroundsPictures}" SelectedItem="{Binding Property.CurentBackGroundPicture}" VerticalAlignment="Top" Background="Transparent" BorderThickness="0">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListBoxItem">
                                            <Border x:Name="Border" BorderThickness="0" Background="{TemplateBinding Background}">
                                                <ContentPresenter />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>

                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border Margin="0 5"  Width="230" Height="140" CornerRadius="3" HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="2" BorderBrush="{Binding Path=DataContext.Property.CurentColor.HardColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                                    <Grid >
                                        <Image Source="{Binding}" Stretch="Fill"/>
                                        <Border x:Name="DeleteButton" Width="30" Height="30" Padding="3" CornerRadius="10" ToolTip="Delete" HorizontalAlignment="Right" VerticalAlignment="Bottom" Style="{StaticResource HoverBorder}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="MouseLeftButtonUp">
                                                    <i:InvokeCommandAction Command="{Binding  Path=DataContext.Property.DeleteImageBackGroundCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            <Border Padding="5" CornerRadius="4">
                                                <Image Source="pack://application:,,,/Images/StaticImages/delete.png" />
                                            </Border>
                                        </Border>
                                     
                                    </Grid>
                                </Border>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="False">
                                        <Setter TargetName="DeleteButton" Property="Visibility" Value="Collapsed"/>
                                       
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>


                    <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 0 5 0">
                        <Border Padding="5" CornerRadius="10" Margin="10,3"  ToolTip="{Binding Language.PropertyImageAdd}" Style="{StaticResource HoverBorder}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonUp">
                                    <i:InvokeCommandAction Command="{Binding  Property.AddImageBackGroundCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Image Source="pack://application:,,,/Images/StaticImages/imageadd.png"  Width="30" Height="30"/>
                        </Border>
                        <Border Padding="5" CornerRadius="10" Margin="0,3" ToolTip="{Binding Language.PropertyImageNo}"   Style="{StaticResource HoverBorder}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonUp">
                                    <i:InvokeCommandAction Command="{Binding   Property.SetNullImageCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Image Source="pack://application:,,,/Images/StaticImages/imageno.png"  Width="30" Height="30"/>
                        </Border>
                    </StackPanel>
                </Grid>
            </Grid>
        </Grid>

        <!--CreateCategory-->
        <Grid x:Name="gridCreateCategoryCont" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed" Width="600"  Panel.ZIndex="{Binding Property.ZIndexCategory}">
            <Grid.Effect>
                <DropShadowEffect BlurRadius="10" Opacity="0.3"/>
            </Grid.Effect>
            <Border x:Name="borderCreateCategory" HorizontalAlignment="Left"  Width="0"  Background="{Binding Property.CurentColor.MainColor}" CornerRadius="20" Height="450" BorderThickness="1" BorderBrush="{Binding Property.CurentColor.HardColor}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.10*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!--ExitCategory-->
                    <Border  Background="{Binding Property.CurentColor.HardColor}" CornerRadius="20 20 0 0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>

  

                            <Border HorizontalAlignment="Left" Grid.Column="1" Padding="10" Margin="5" Width="30" CornerRadius="10" Style="{StaticResource HoverBorder}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                        <ei:ControlStoryboardAction Storyboard="{StaticResource CloseCreateCategory}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Image   Source="pack://application:,,,/Images/StaticImages/close.png" />
                            </Border>
                        </Grid>
                    </Border>



                    <Grid x:Name="gridInfoCreateCategory" Grid.Row="1" Margin="5" Opacity="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="0.3*"/>
                        </Grid.ColumnDefinitions>

                        <!--Input-->
                        <StackPanel Grid.Column="0">
                            <!--TypeCategory-->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <TextBlock  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Foreground="{Binding Property.CurentColor.ColorForFontsOnWhite}" Text="{Binding Language.СhoseTypeCategory}" FontSize="14" />
                                <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Foreground="Red" FontSize="10" Text="{Binding Category.ExeptionTypeCategory}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Category.ExeptionTypeCategory}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Category.ExeptionTypeCategory}" Value="">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                                <Border x:Name="border" Width="30" Grid.Column="0" Grid.Row="2"  CornerRadius="5" Padding="5" Margin="5" Style="{StaticResource HoverProfit}" >
                                    <i:Interaction.Triggers>
                                        <ei:DataTrigger Binding="{Binding Category.NewCategoryProfitAnimation}" Value="True">
                                            <ei:ControlStoryboardAction Storyboard="{StaticResource TapNewCategoryProfitTrue}"/>
                                        </ei:DataTrigger>
                                        <ei:DataTrigger Binding="{Binding Category.NewCategoryProfitAnimation}" Value="False">
                                            <ei:ControlStoryboardAction Storyboard="{StaticResource TapNewCategoryProfitFasle}"/>
                                        </ei:DataTrigger>
                                        <i:EventTrigger EventName="MouseLeftButtonUp">
                                            <i:InvokeCommandAction Command="{Binding Category.ProfitNewCategory}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="pack://application:,,,/Images/StaticImages/arrow-up.png" Width="20" Margin="0 0 5 0"/>
                                        <TextBlock Text="{Binding Language.CategoryProfit}" VerticalAlignment="Center"  Foreground="White"/>
                                    </StackPanel>
                                </Border>
                                <Border x:Name="border2" Width="30" Grid.Column="1"  Grid.Row="2" Style="{StaticResource HoverCosts}" CornerRadius="5"  Padding="5" Margin="5" >
                                    <i:Interaction.Triggers>
                                        <ei:DataTrigger Binding="{Binding Category.NewCategoryCostsAnimation}" Value="True">
                                            <ei:ControlStoryboardAction Storyboard="{StaticResource TapNewCategoryCostsTrue}"/>
                                        </ei:DataTrigger>
                                        <ei:DataTrigger Binding="{Binding Category.NewCategoryCostsAnimation}" Value="False">
                                            <ei:ControlStoryboardAction Storyboard="{StaticResource TapNewCategoryCostsFalse}"/>
                                        </ei:DataTrigger>
                                        <i:EventTrigger EventName="MouseLeftButtonUp">
                                            <i:InvokeCommandAction Command="{Binding Category.CostsNewCategory}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="pack://application:,,,/Images/StaticImages/arrow-down.png" Width="20"  Margin="0 0 5 0"/>
                                        <TextBlock Text="{Binding Language.CategoryCosts}" VerticalAlignment="Center" Foreground="White"/>
                                    </StackPanel>
                                </Border>
                            </Grid>

                            <!--Name-->
                            <StackPanel>
                                <TextBlock FontSize="14" Foreground="{Binding Property.CurentColor.ColorForFontsOnWhite}" HorizontalAlignment="Left" Text="{Binding Language.СhoseNameCategory}"/>
                                <TextBlock TextWrapping="Wrap" Foreground="Red" FontSize="10"  Text="{Binding Category.ExeptionNameCategory}"  >
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Category.ExeptionNameCategory}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Category.ExeptionNameCategory}" Value="">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBox Text="{Binding Category.NameNewCategory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="14"  Margin="0 0 5 0"/>
                            </StackPanel>

                            <!--Price-->
                            <StackPanel  Margin="0 10">
                                <TextBlock  Foreground="{Binding Property.CurentColor.ColorForFontsOnWhite}"  FontSize="14" HorizontalAlignment="Left" Text="{Binding Language.PriceCategory}"/>

                                <StackPanel Orientation="Horizontal">
                                    <TextBlock  Foreground="{Binding Property.CurentColor.ColorForFontsOnWhite}"  FontSize="12" HorizontalAlignment="Left" Text="{Binding Language.PriceCategoryInfo}"/>
                                    <CheckBox  Margin="3,0,0,0"  IsChecked="{Binding Category.VisiilityPrice}"  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </StackPanel>
                                <TextBox Visibility="{Binding Path=Category.VisiilityPrice, Converter={StaticResource booleanToVisibilityConverter}}"  Text="{Binding Category.PriceNewCategory,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="14"  Margin="0 0 5 0"/>
                            </StackPanel>

                            <!--Color-->
                            <StackPanel>
                                <TextBlock Foreground="{Binding Property.CurentColor.ColorForFontsOnWhite}"  Text="{Binding Language.ColorsCategory}" FontSize="14" />

                                <ListBox  Margin="0 10" ItemsSource="{Binding Category.ColorsForCategory}" SelectedItem="{Binding Category.ColorNewCategory}" Background="Transparent">
                                    <ListBox.Style>
                                        <Style TargetType="ListBox">
                                            <Setter Property="BorderThickness" Value="0"/>
                                        </Style>
                                    </ListBox.Style>

                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem">
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ListBoxItem">
                                                        <Border x:Name="Border" BorderThickness="0" Background="{TemplateBinding Background}">
                                                            <ContentPresenter />
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter TargetName="Border" Property="BorderThickness" Value="2" />
                                                                <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
                                                                <Setter TargetName="Border" Property="CornerRadius" Value="18" />
                                                                <Setter TargetName="Border" Property="Width" Value="29" />
                                                                <Setter TargetName="Border" Property="Height" Value="29" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListBox.ItemContainerStyle>

                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <UniformGrid Rows="2" />
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>

                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Border Padding="3" Width="25" Height="25">
                                                <Ellipse Fill="{Binding}"  />
                                            </Border>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </StackPanel>
                           

                            <!--Image-->
                            <StackPanel>
                                <TextBlock Foreground="{Binding Property.CurentColor.ColorForFontsOnWhite}"  Text="{Binding Language.ImageCategories}" FontSize="14"  />
                                <ListBox   ItemsSource="{Binding Category.ImagesForCategory}"  SelectedItem="{Binding Category.ImageNewCategory}" Background="Transparent">
                                    <ListBox.Style>
                                        <Style TargetType="ListBox">
                                            <Setter Property="BorderThickness" Value="0"/>
                                        </Style>
                                    </ListBox.Style>

                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <UniformGrid Rows="2" />
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Image Source="{Binding}" Width="30"  HorizontalAlignment="Center"></Image>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </StackPanel>
                          
                        </StackPanel>

                        <Line Grid.Column="1" Y1="0"  Y2="1" Stretch="Fill" Stroke="{Binding Property.CurentColor.HardColor}" Margin="10 0" StrokeThickness="1" />
                        <!--RezultAndButtons-->
                        <Grid Grid.Column="2">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="0.2*"/>
                            </Grid.RowDefinitions>

                            <Grid  Grid.Row="0" >
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Border Padding="5" CornerRadius="20" Background="{Binding Category.ColorNewCategory}" Width="50">
                                        <Image Source="{Binding Category.ImageNewCategory}" />
                                    </Border>
                                    <TextBlock Foreground="{Binding Property.CurentColor.ColorForFontsOnWhite}" Text="{Binding Category.NameNewCategory, Mode=OneWay}" FontSize="14" HorizontalAlignment="Center"/>
                                </StackPanel>
                            </Grid>

                            <Border Grid.Row="1" Visibility="{Binding Path=Category.VisibilityCreateCategory, Converter={StaticResource booleanToVisibilityConverter}}" Style="{StaticResource HoverBorder}" CornerRadius="10" Margin="5" Padding="5" >
                                <i:Interaction.Triggers>
                                    <ei:DataTrigger Binding="{Binding Path=DataContext.Category.IsShowAnimateClose, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="True">
                                        <ei:ControlStoryboardAction Storyboard="{StaticResource CloseCreateCategory}"/>
                                    </ei:DataTrigger>
                                    <i:EventTrigger EventName="MouseLeftButtonUp" >
                                        <i:InvokeCommandAction Command="{Binding Category.CreateCategoryCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBlock Foreground="{Binding Property.CurentColor.ColorForFontsOnBlack}" Text="{Binding Language.CreateCategory}" FontSize="12" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <Border Grid.Row="1" Visibility="{Binding Path=Category.VisibilityUpdateCategory, Converter={StaticResource booleanToVisibilityConverter}}" Style="{StaticResource HoverBorder}" CornerRadius="10" Margin="5" Padding="5" >
                                <i:Interaction.Triggers>
                                    <ei:DataTrigger Binding="{Binding Path=DataContext.Category.IsShowAnimateClose, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="True">
                                        <ei:ControlStoryboardAction Storyboard="{StaticResource CloseCreateCategory}"/>
                                    </ei:DataTrigger>
                                    <i:EventTrigger EventName="MouseLeftButtonUp" >
                                        <i:InvokeCommandAction Command="{Binding Category.UpdateCategoryCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                                <TextBlock Foreground="{Binding Property.CurentColor.ColorForFontsOnBlack}" Text="{Binding Language.ChangeCategory}" FontSize="12" FontWeight="Bold" HorizontalAlignment="Center"  VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                    </Grid>
                </Grid>
            </Border>
        </Grid>



        <!--Create Cash-->
        <Grid x:Name="gridCreateCashCont"  HorizontalAlignment="Center" VerticalAlignment="Center" Width="400" Background="Transparent" Panel.ZIndex="{Binding Property.ZIndexCash}">
            <Grid.Effect>
                <DropShadowEffect BlurRadius="10" Opacity="0.3"/>
            </Grid.Effect>
            <Border x:Name="borderCreateCash"  HorizontalAlignment="Left" Background="{Binding Property.CurentColor.MainColor}" Width="0" BorderThickness="1" BorderBrush="{Binding Property.CurentColor.HardColor}" CornerRadius="20">
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <!--Exit Cash-->
                    <Border Background="{Binding Property.CurentColor.HardColor}" CornerRadius="20 20 0 0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Column="0"  Orientation="Horizontal"  Margin="5">
                                <Border  Width="30" Padding="5" CornerRadius="20" Background="{Binding Data.CurentCategory.Color}" VerticalAlignment="Center" HorizontalAlignment="Left">
                                    <Image  Source="{Binding Data.CurentCategory.Image}" VerticalAlignment="Center" />
                                </Border>
                                <TextBlock Margin="3 0 0 0" FontSize="14" Text="{Binding Data.CurentCategory.Name}" VerticalAlignment="Center" Foreground="{Binding Property.CurentColor.ColorForFontsOnBlack}"/>
                            </StackPanel>
                            

                            <Border  Grid.Column="1" HorizontalAlignment="Left"  Padding="5" Margin="5" Width="30" CornerRadius="10" Style="{StaticResource HoverBorder}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                        <ei:ControlStoryboardAction Storyboard="{StaticResource CloseCreateCash}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Image Source="pack://application:,,,/Images/StaticImages/close.png"  />
                            </Border>
                        </Grid>
                    </Border>


                    <Grid Grid.Row="1" x:Name="grid4" Opacity="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>

                        <!--price-->
                        <StackPanel Grid.Row="0">
                            <TextBlock Grid.Row="0" Margin="10 0" Foreground="Red" FontSize="10" Text="{Binding Cash.ExeptionCash}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Cash.ExeptionCash}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Cash.ExeptionCash}" Value="">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <ContentControl Grid.Row="1" Margin="0 10" Style="{StaticResource PriceStyle}" Content="{Binding Data.CurentCategory.Price}" />

                            <TextBox  Grid.Row="2" Height="50" Margin="10 0" Text="{Binding Cash.CashDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Style.Triggers>
                                            <Trigger Property="Text" Value="">
                                                <Setter Property="Background">
                                                    <Setter.Value>
                                                        <VisualBrush Stretch="None">
                                                            <VisualBrush.Visual>
                                                                <Label Content="description" Foreground="Gray"  HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                                            </VisualBrush.Visual>
                                                        </VisualBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </StackPanel>

                        <!--buttons-->
                        <Grid Grid.Row="1">
                            <Border  Visibility="{Binding Path=Cash.VisibilityCreateCash, Converter={StaticResource booleanToVisibilityConverter}}" Style="{StaticResource HoverBorder}"  CornerRadius="10" Margin="20" Padding="5"  BorderThickness="2" BorderBrush="{Binding Property.CurentColor.HardColorEnter}">
                                <i:Interaction.Triggers>
                                    <ei:DataTrigger Binding="{Binding Path=DataContext.Cash.IsShowAnimate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="True">
                                        <ei:ControlStoryboardAction Storyboard="{StaticResource CloseCreateCash}"/>
                                    </ei:DataTrigger>
                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                        <i:InvokeCommandAction Command="{Binding Cash.CreateCashCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                    <TextBlock Foreground="{Binding Property.CurentColor.ColorForFontsOnBlack}"  Text="{Binding Language.CreateCashAdd}" FontSize="14" FontWeight="Bold"  Margin="3 0"/>
                                    <TextBlock Foreground="{Binding Property.CurentColor.ColorForFontsOnBlack}"  Text="{Binding Cash.TotalPrice}" FontSize="14" FontWeight="Bold"/>
                                </StackPanel>
                            </Border>
                            <Border Visibility="{Binding Path=Cash.VisibilityUpdateCash, Converter={StaticResource booleanToVisibilityConverter}}" Style="{StaticResource HoverBorder}" CornerRadius="10" Margin="20" Padding="5"  BorderThickness="2" BorderBrush="{Binding Property.CurentColor.HardColorEnter}" >
                                <i:Interaction.Triggers>
                                    <ei:DataTrigger Binding="{Binding Path=DataContext.Cash.IsShowAnimate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="True">
                                        <ei:ControlStoryboardAction Storyboard="{StaticResource CloseCreateCash}"/>
                                    </ei:DataTrigger>
                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                        <i:InvokeCommandAction Command="{Binding Cash.UpdateCashCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                    <TextBlock Foreground="{Binding Property.CurentColor.ColorForFontsOnBlack}"  Text="{Binding Language.CreateCashChange}" FontSize="14" FontWeight="Bold" Margin="3 0" />
                                    <TextBlock Foreground="{Binding Property.CurentColor.ColorForFontsOnBlack}"  Text="{Binding Cash.TotalPrice}" FontSize="14" FontWeight="Bold"/>
                                </StackPanel>
                            </Border>
                        </Grid>
                    </Grid>
                </Grid>
            </Border>

        </Grid>


        <Popup  Placement="MousePoint"  PopupAnimation="Fade" IsOpen="{Binding Path=Category.VisibilityPopup}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeave">
                    <i:InvokeCommandAction Command="{Binding Category.ClosePopupCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <StackPanel Width="100">
               
                <Border Padding="10" Style="{StaticResource HoverBorder}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding Category.DeleteCategoryCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <TextBlock Text="Delete" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{Binding Property.CurentColor.ColorForFontsOnBlack}"/>
                </Border>
                <Border Padding="10" Style="{StaticResource HoverBorder}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding Category.SetToUpdateCategoryCommand}"/>
                            <i:InvokeCommandAction Command="{Binding Property.ShowCategoryCommand}"/>
                            <ei:ControlStoryboardAction Storyboard="{StaticResource ShowCreateCategory}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <TextBlock Text="Update" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{Binding Property.CurentColor.ColorForFontsOnBlack}"/>
                </Border>
            </StackPanel>
        </Popup>
        <Popup Placement="MousePoint" PopupAnimation="Fade" IsOpen="{Binding Path=Cash.VisibilityPopup}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeave">
                    <i:InvokeCommandAction Command="{Binding Cash.ClosePopupCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <StackPanel>
                <Border Padding="10" Style="{StaticResource HoverBorder}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding Cash.DeleteCashCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <TextBlock Text="{Binding Language.Delete}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{Binding Property.CurentColor.ColorForFontsOnBlack}"/>
                </Border>
                <Border Padding="10" Style="{StaticResource HoverBorder}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding Cash.SetToUpdateCashCommand}"/>
                            <ei:ControlStoryboardAction Storyboard="{StaticResource ShowCreateCash}"/>
                            <i:InvokeCommandAction Command="{Binding Property.ShowCashCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <TextBlock Text="{Binding Language.Update}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{Binding Property.CurentColor.ColorForFontsOnBlack}"/>
                </Border>
            </StackPanel>
        </Popup>
    </Grid>


</Window>
